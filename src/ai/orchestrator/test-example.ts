/**
 * Exemplo de teste do Orquestrador LexAI
 * Script para testar o funcionamento do pipeline
 */

import { config } from 'dotenv';
config({ path: '.env.local' });

import { DEFAULT_ORCHESTRATOR_CONFIG } from './config';
import { DocumentPipeline } from './pipeline';
import { ProcessingInput } from './types';

async function testOrchestrator() {
  console.log('üß† Testando Orquestrador LexAI - APENAS GOOGLE AI...\n');
  
  // Verifica se a chave do Google AI est√° configurada
  if (!process.env.GOOGLE_AI_API_KEY) {
    console.error('‚ùå GOOGLE_AI_API_KEY n√£o configurada!');
    console.log('üí° Configure a vari√°vel de ambiente GOOGLE_AI_API_KEY');
    return;
  }
  
  console.log('‚úÖ Google AI API Key configurada');

  // Cria pipeline com configura√ß√£o padr√£o
  const pipeline = new DocumentPipeline(DEFAULT_ORCHESTRATOR_CONFIG);

  // Input de exemplo para gera√ß√£o de peti√ß√£o
  const testInput: ProcessingInput = {
    taskType: 'document_generation',
    documentType: 'petition',
    legalArea: 'civil',
    instructions: `
Elaborar peti√ß√£o inicial de a√ß√£o de indeniza√ß√£o por danos morais.
Enfatizar a responsabilidade objetiva do requerido.
Incluir fundamenta√ß√£o baseada no CDC e Constitui√ß√£o Federal.
`,
    context: [
      {
        type: 'ocr_text',
        content: `
RELAT√ìRIO DE ACIDENTE
Data: 15/01/2024
Local: Supermercado ABC
Descri√ß√£o: Cliente escorregou em piso molhado sem sinaliza√ß√£o
Les√µes: Fratura no punho direito
Testemunhas: Jo√£o Silva (funcion√°rio), Maria Santos (cliente)
Valor m√©dico: R$ 3.500,00
Afastamento: 30 dias
`,
        source: 'relatorio_acidente.pdf'
      },
      {
        type: 'template',
        content: `
MODELO DE PETI√á√ÉO INICIAL

Exmo. Sr. Dr. Juiz de Direito da [Vara]

[REQUERENTE], [qualifica√ß√£o], vem respeitosamente √† presen√ßa de Vossa Excel√™ncia, por meio de seu advogado que esta subscreve, propor a presente:

A√á√ÉO DE INDENIZA√á√ÉO POR DANOS MORAIS E MATERIAIS

em face de [REQUERIDO], [qualifica√ß√£o], pelos fatos e fundamentos jur√≠dicos que passa a expor:

I - DOS FATOS
[Narrativa dos fatos]

II - DO DIREITO
[Fundamenta√ß√£o jur√≠dica]

III - DOS PEDIDOS
[Pedidos espec√≠ficos]

Nestes termos, pede deferimento.
[Local], [data]
[Assinatura do advogado]
`,
        source: 'template_peticao.docx'
      }
    ]
  };

  try {
    console.log('üìù Iniciando processamento...');
    const startTime = Date.now();

    const result = await pipeline.process(testInput);

    const endTime = Date.now();
    const duration = endTime - startTime;

    console.log('\n‚úÖ Processamento conclu√≠do!');
    console.log(`‚è±Ô∏è  Tempo total: ${duration}ms`);
    
    console.log('\nüìÑ DOCUMENTO GERADO:');
    console.log('='.repeat(50));
    console.log(result.result?.content || 'Nenhum documento gerado');
    console.log('='.repeat(50));

    console.log('\nüìà M√âTRICAS:');
    console.log(`üìä Sucesso: ${result.success}`);
    console.log(`üìä Pipeline: ${result.pipeline.stages.length} etapas`);
    console.log(`‚è±Ô∏è  Pipeline total: ${result.pipeline.totalDuration}ms`);
    console.log(`üí∞ Custo total: $${result.pipeline.totalCost.toFixed(4)}`);
    console.log(`üî¢ Tokens totais: ${result.pipeline.totalTokens}`);

  } catch (error) {
    console.error('‚ùå Erro durante processamento:', error);
    
    if (error instanceof Error) {
      if (error.message.includes('API key')) {
        console.log('\nüí° DICA: Verifique a chave do Google AI:');
        console.log('   - GOOGLE_AI_API_KEY deve estar em .env.local');
        console.log('   - Chave atual:', process.env.GOOGLE_AI_API_KEY ? 'Configurada' : 'N√£o configurada');
      }
    }
  }
}

// Executa teste se arquivo for executado diretamente
if (require.main === module) {
  testOrchestrator().catch(console.error);
}

export { testOrchestrator };