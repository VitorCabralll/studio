#!/bin/bash

# üîÑ Script para trocar entre ambientes LexAI
# Uso: ./scripts/switch-env.sh [development|staging|production]

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para mostrar uso
show_usage() {
    echo "üîÑ Script de Troca de Ambiente LexAI"
    echo ""
    echo "Uso: ./scripts/switch-env.sh [ambiente]"
    echo ""
    echo "Ambientes dispon√≠veis:"
    echo "  üõ†Ô∏è  development  - Desenvolvimento local"
    echo "  üß™  staging      - Testes internos" 
    echo "  üöÄ  production   - Ambiente real (CUIDADO!)"
    echo ""
    echo "Exemplo:"
    echo "  ./scripts/switch-env.sh development"
}

# Verificar par√¢metro
if [ $# -eq 0 ]; then
    show_usage
    exit 1
fi

ENV=$1

# Verificar se o ambiente √© v√°lido
case $ENV in
    development|dev)
        ENV="development"
        ENV_FILE="environments/development/.env.development"
        EMOJI="üõ†Ô∏è"
        COLOR=$BLUE
        ;;
    staging)
        ENV="staging"
        ENV_FILE="environments/staging/.env.staging"
        EMOJI="üß™"
        COLOR=$YELLOW
        ;;
    production|prod)
        ENV="production"
        ENV_FILE="environments/production/.env.production"
        EMOJI="üöÄ"
        COLOR=$RED
        ;;
    *)
        echo -e "${RED}‚ùå Ambiente inv√°lido: $ENV${NC}"
        show_usage
        exit 1
        ;;
esac

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Execute este script no diret√≥rio raiz do projeto${NC}"
    exit 1
fi

# Verificar se o arquivo de ambiente existe
if [ ! -f "$ENV_FILE" ]; then
    echo -e "${RED}‚ùå Arquivo de ambiente n√£o encontrado: $ENV_FILE${NC}"
    exit 1
fi

# Backup do ambiente atual (se existir)
if [ -f ".env.local" ]; then
    cp .env.local .env.local.backup
    echo -e "${GREEN}üìÅ Backup do ambiente atual criado${NC}"
fi

# Avisos especiais para produ√ß√£o
if [ "$ENV" = "production" ]; then
    echo -e "${RED}‚ö†Ô∏è  ATEN√á√ÉO: Voc√™ est√° mudando para PRODU√á√ÉO!${NC}"
    echo -e "${RED}‚ö†Ô∏è  Este ambiente afeta usu√°rios reais!${NC}"
    echo ""
    read -p "Tem certeza? Digite 'CONFIRMO' para continuar: " confirm
    
    if [ "$confirm" != "CONFIRMO" ]; then
        echo -e "${YELLOW}üõë Opera√ß√£o cancelada${NC}"
        exit 0
    fi
fi

# Copiar arquivo de ambiente
cp "$ENV_FILE" .env.local

echo ""
echo -e "${COLOR}${EMOJI} Ambiente alterado para: ${ENV^^}${NC}"
echo ""

# Mostrar configura√ß√µes principais
echo "üìã Configura√ß√µes ativas:"
if grep -q "NEXT_PUBLIC_APP_ENV=" .env.local; then
    APP_ENV=$(grep "NEXT_PUBLIC_APP_ENV=" .env.local | cut -d'=' -f2)
    echo "   üåç Environment: $APP_ENV"
fi

if grep -q "NEXT_PUBLIC_APP_NAMESPACE=" .env.local; then
    NAMESPACE=$(grep "NEXT_PUBLIC_APP_NAMESPACE=" .env.local | cut -d'=' -f2)
    echo "   üè∑Ô∏è  Namespace: ${NAMESPACE:-'(nenhum)'}"
fi

if grep -q "NEXT_PUBLIC_MAX_FILE_SIZE=" .env.local; then
    MAX_SIZE=$(grep "NEXT_PUBLIC_MAX_FILE_SIZE=" .env.local | cut -d'=' -f2)
    SIZE_MB=$((MAX_SIZE / 1048576))
    echo "   üìÅ Max file size: ${SIZE_MB}MB"
fi

echo ""

# Instru√ß√µes espec√≠ficas por ambiente
case $ENV in
    development)
        echo -e "${BLUE}üõ†Ô∏è  Ambiente de DESENVOLVIMENTO ativo${NC}"
        echo "   ‚Ä¢ Use para desenvolvimento di√°rio"
        echo "   ‚Ä¢ Execute: npm run dev"
        echo "   ‚Ä¢ URL: http://localhost:3000"
        ;;
    staging)
        echo -e "${YELLOW}üß™ Ambiente de STAGING ativo${NC}"
        echo "   ‚Ä¢ Use para testes internos"
        echo "   ‚Ä¢ Execute: npm run build && firebase deploy"
        echo "   ‚Ä¢ URL: https://lexai-ef0ab.web.app (com banner)"
        ;;
    production)
        echo -e "${RED}üöÄ Ambiente de PRODU√á√ÉO ativo${NC}"
        echo -e "${RED}   ‚ö†Ô∏è  CUIDADO: Afeta usu√°rios reais!${NC}"
        echo "   ‚Ä¢ Use apenas para releases finais"
        echo "   ‚Ä¢ URL: https://lexai-ef0ab.web.app"
        ;;
esac

echo ""
echo -e "${GREEN}‚úÖ Troca de ambiente conclu√≠da!${NC}"

# Verificar se h√° servidor rodando
if pgrep -f "next dev" > /dev/null; then
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Servidor Next.js detectado rodando${NC}"
    echo "   Reinicie o servidor para aplicar as mudan√ßas:"
    echo "   Ctrl+C no terminal e execute: npm run dev"
fi