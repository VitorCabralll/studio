rules_version = '2';

service cloud.firestore {
  match /databases/lexai/documents {
    
    // ============================================================================
    // REGRAS PRINCIPAIS - LIMPAS E CONSISTENTES
    // ============================================================================
    
    // 1. USUÁRIOS - Perfis de usuário (com ou sem namespace)
    match /usuarios/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }
    
    match /dev_usuarios/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }
    
    match /prod_usuarios/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }
    
    // 2. WORKSPACES - Apenas membros podem acessar
    match /workspaces/{workspaceId} {
      // Leitura/escrita: apenas membros
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Criação: usuário deve estar em members E owners
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.members &&
        request.auth.uid in request.resource.data.owners;
      
      // LISTAGEM SEGURA: apenas workspaces onde o usuário é membro
      allow list: if request.auth != null;
    }
    
    // 3. AGENTES - Subcoleção de workspaces
    match /workspaces/{workspaceId}/agentes/{agentId} {
      allow read, write, create: if request.auth != null && 
        exists(/databases/lexai/documents/workspaces/$(workspaceId)) &&
        request.auth.uid in get(/databases/lexai/documents/workspaces/$(workspaceId)).data.members;
    }
    
    // Listagem de agentes (para subcoleção)
    match /workspaces/{workspaceId}/agentes/{document=**} {
      allow read: if request.auth != null && 
        exists(/databases/lexai/documents/workspaces/$(workspaceId)) &&
        request.auth.uid in get(/databases/lexai/documents/workspaces/$(workspaceId)).data.members;
    }
    
    // ============================================================================
    // REGRAS FUTURAS - Para funcionalidades que serão implementadas
    // ============================================================================
    
    // 4. DOCUMENTOS GERADOS - Apenas do usuário
    match /documentos/{documentId} {
      allow read, write, create: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // 5. UPLOADS/ANEXOS - Apenas do usuário
    match /uploads/{uploadId} {
      allow read, write, create: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // 6. DOCUMENTOS FINAIS - Apenas do usuário
    match /documents/{documentId} {
      allow read, write, create: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // 7. PROCESSAMENTO DE DOCUMENTOS - Apenas do usuário
    match /document_processing/{documentId} {
      allow read, write, create: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // 8. RETENÇÃO DE DADOS - Apenas do usuário
    match /data_retention/{documentId} {
      allow read, write, create: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // ============================================================================
    // CONFIGURAÇÕES E METADADOS
    // ============================================================================
    
    // 9. CONFIGURAÇÕES GLOBAIS - Apenas leitura para usuários autenticados
    match /configuracoes/{configId} {
      allow read: if request.auth != null;
      allow write: if false; // Apenas admin via Cloud Functions
    }
    
    // ============================================================================
    // FALLBACK - NEGAR TUDO O QUE NÃO ESTÁ EXPLICITAMENTE PERMITIDO
    // ============================================================================
    
    // Esta regra deve vir POR ÚLTIMO para garantir segurança
    match /{document=**} {
      allow read, write: if false;
    }
  }
}