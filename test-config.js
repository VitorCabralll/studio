#!/usr/bin/env node

/**
 * Teste de Configura√ß√£o - Verificar se as chaves est√£o carregadas
 */

console.log('üîç VERIFICA√á√ÉO DE CONFIGURA√á√ÉO - SISTEMA APP CHECK\n');

// Ler arquivo .env.local diretamente
const fs = require('fs');
const envContent = fs.readFileSync('.env.local', 'utf8');
const envLines = envContent.split('\n');
envLines.forEach(line => {
  if (line.includes('=') && !line.startsWith('#')) {
    const [key, ...valueParts] = line.split('=');
    const value = valueParts.join('=');
    process.env[key.trim()] = value.trim();
  }
});

console.log('üìã STATUS DAS VARI√ÅVEIS DE AMBIENTE:\n');

// reCAPTCHA
const recaptchaKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY;
console.log(`‚úÖ reCAPTCHA Site Key: ${recaptchaKey ? 'CONFIGURADA' : '‚ùå AUSENTE'}`);
if (recaptchaKey) {
  console.log(`   üîë Valor: ${recaptchaKey.slice(0, 20)}...`);
}

// App Check Debug Token
const debugToken = process.env.NEXT_PUBLIC_APP_CHECK_DEBUG_TOKEN;
console.log(`‚úÖ App Check Debug Token: ${debugToken ? 'CONFIGURADO' : '‚ùå AUSENTE'}`);
if (debugToken) {
  console.log(`   üîë Valor: ${debugToken.slice(0, 20)}...`);
}

// Firebase Config
const firebaseApiKey = process.env.NEXT_PUBLIC_FIREBASE_API_KEY;
console.log(`‚úÖ Firebase API Key: ${firebaseApiKey ? 'CONFIGURADA' : '‚ùå AUSENTE'}`);

const firebaseProjectId = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID;
console.log(`‚úÖ Firebase Project ID: ${firebaseProjectId ? firebaseProjectId : '‚ùå AUSENTE'}`);

// Gemini API
const geminiKey = process.env.GOOGLE_AI_API_KEY;
console.log(`‚úÖ Gemini API Key: ${geminiKey ? 'CONFIGURADA' : '‚ùå AUSENTE'}`);

console.log('\n' + '='.repeat(70));
console.log('üéØ RESULTADO DA VERIFICA√á√ÉO');
console.log('='.repeat(70));

const allConfigured = recaptchaKey && debugToken && firebaseApiKey && firebaseProjectId;

if (allConfigured) {
  console.log('\n‚úÖ TODAS AS CONFIGURA√á√ïES NECESS√ÅRIAS EST√ÉO PRESENTES!');
  console.log('\nüöÄ PR√ìXIMOS PASSOS:');
  console.log('1. npm run dev (j√° est√° rodando)');
  console.log('2. Acesse http://localhost:3000');
  console.log('3. Teste login/signup');
  console.log('4. Verifique console do browser para logs App Check');
  console.log('\nüìä EXPECTATIVA:');
  console.log('‚Ä¢ Console deve mostrar: "App Check: Token obtained successfully"');
  console.log('‚Ä¢ Login/signup deve funcionar sem erros 400');
  console.log('‚Ä¢ Identity Toolkit API error rate: 26% ‚Üí 0%');
} else {
  console.log('\n‚ùå ALGUMAS CONFIGURA√á√ïES EST√ÉO AUSENTES!');
  console.log('\nCONFIGURA√á√ïES FALTANDO:');
  if (!recaptchaKey) console.log('‚Ä¢ reCAPTCHA Site Key');
  if (!debugToken) console.log('‚Ä¢ App Check Debug Token');
  if (!firebaseApiKey) console.log('‚Ä¢ Firebase API Key');
  if (!firebaseProjectId) console.log('‚Ä¢ Firebase Project ID');
}

console.log('\nüìû LINKS PARA VERIFICA√á√ÉO:');
console.log('‚Ä¢ App Check Console: https://console.firebase.google.com/project/lexai-ef0ab/appcheck');
console.log('‚Ä¢ reCAPTCHA Console: https://www.google.com/recaptcha/admin');
console.log('‚Ä¢ Firebase Console: https://console.firebase.google.com/project/lexai-ef0ab');

console.log('\n‚ú® Configura√ß√£o verificada!');