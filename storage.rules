rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Uploads de usuários - apenas próprios arquivos
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Modelos de agentes por workspace (suporte completo a namespace)
    match /workspaces/{workspaceId}/models/{allPaths=**} {
      allow read, write: if request.auth != null && 
        (firestore.exists(/databases/(default)/documents/prod_workspaces/$(workspaceId)) &&
         request.auth.uid in firestore.get(/databases/(default)/documents/prod_workspaces/$(workspaceId)).data.members) ||
        (firestore.exists(/databases/(default)/documents/dev_workspaces/$(workspaceId)) &&
         request.auth.uid in firestore.get(/databases/(default)/documents/dev_workspaces/$(workspaceId)).data.members) ||
        (firestore.exists(/databases/(default)/documents/workspaces/$(workspaceId)) &&
         request.auth.uid in firestore.get(/databases/(default)/documents/workspaces/$(workspaceId)).data.members);
    }
    
    // Documentos gerados - apenas do usuário
    match /documents/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Anexos temporários para processamento
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Auto-delete após 24h via lifecycle rules
    }
    
    // Arquivos públicos (logos, etc.) - apenas leitura
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Apenas via functions
    }
  }
}
